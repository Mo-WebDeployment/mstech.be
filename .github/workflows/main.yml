name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy files via SSH
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.DROPLET_IP }}             # Your server IP address (in GitHub Secrets)
          username: root                               # The username to connect as (usually root or another user with SSH access)
          key: ${{ secrets.SSH_PRIVATE_KEY }}          # Your private SSH key stored in GitHub Secrets
          source: ./website-files/*                    # The local path of the files you want to upload
          target: /var/www/html/${{ secrets.WEBSITE_NAME }}/  # The destination path on the server
          port: 22                                     # Default SSH port (22), unless you've changed it
          timeout: 30s                                 # Timeout for SSH connection
          command_timeout: 10m                         # Time allowed for the command to run
          use_insecure_cipher: false                   # Keep this false unless your server requires an insecure cipher
          rm: false                                    # Set to true if you want to remove the files at the target before uploading new ones
          debug: false                                 # Set to true to enable more detailed logging for debugging
          strip_components: 0                          # How many leading components to strip from file names when copying
          overwrite: false                             # Set to true if you want to overwrite existing files at the destination
          proxy_port: 22                               # Set if you are using an SSH proxy, otherwise it can be removed
          proxy_timeout: 30s                           # Set proxy timeout if using a proxy
          proxy_use_insecure_cipher: false              # Set if using an insecure cipher through a proxy, can be removed if no proxy

          
      - name: Set up Apache Virtual Host
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          sudo tee /etc/apache2/sites-available/${{ secrets.WEBSITE_NAME }}.conf > /dev/null <<EOT
          <VirtualHost *:80>
              ServerAdmin webmaster@${{ secrets.WEBSITE_NAME }}
              ServerName ${{ secrets.WEBSITE_NAME }}
              DocumentRoot /var/www/html/${{ secrets.WEBSITE_NAME }}
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
          EOT
          sudo a2ensite ${{ secrets.WEBSITE_NAME }}.conf
          sudo systemctl reload apache2
          EOF

      - name: Restart Apache
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          sudo systemctl restart apache2
          EOF

      - name: Obtain SSL Certificate (Optional)
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          sudo apt install certbot python3-certbot-apache -y
          sudo certbot --apache -d ${{ secrets.WEBSITE_NAME }} -m admin@${{ secrets.WEBSITE_NAME }} --agree-tos --non-interactive
          EOF
